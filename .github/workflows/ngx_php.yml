name: Ngx-php build test
on: [ push, pull_request ]

env:
  DB_DATABASE: test_db
  DB_USER: root
  DB_PASSWORD: root

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        php_version: [8.0.28, 8.1.17] #[7.0.33, 7.1.33, 7.2.34, 7.3.33, 7.4.26, 8.0.28, 8.1.17]
        ngxinx_version: [1.22.1, 1.23.4] #[1.12.2, 1.20.2, 1.22.1, 1.23.4]
    steps:
    - uses: actions/checkout@v3
    - name: prepare basic packages
      run: | 
        sudo apt-get install -yqq locales language-pack-de re2c libgmp-dev libicu-dev libmcrypt-dev libtidy-dev libenchant-dev libaspell-dev libpspell-dev librecode-dev libsasl2-dev libxpm-dev cpanminus openssl libssl-dev libbz2-dev libzip-dev systemtap-sdt-dev libonig-dev axel libcurl3-dev 
        sudo apt-get install -y redis-server redis-tools memcached
        sudo redis-server /etc/redis/redis.conf
    - name: perl packages 
      run: sudo cpanm -n Test::Nginx
    - name: compiler
      env:
          PHP_SRC_VERSION: ${{ matrix.php_version }}
          NGINX_SRC_VERSION: ${{ matrix.ngxinx_version }}
      run: |
        sudo /etc/init.d/mysql start
        mysql -h 0.0.0.0 -P 33306 -uroot -p${{ env.DB_PASSWORD }} -e 'create database ngx_php; grant all on ngx_php.* to "ngx_php"@"%" identified by "ngx_php"; flush privileges;'
        if [ ! -d data-cache ]; then mkdir data-cache; fi
        if [ ! -f data-cache/world-db.tar.gz ]; then wget -O data-cache/world-db.tar.gz https://downloads.mysql.com/docs/world-db.tar.gz; fi
        tar zxvf data-cache/world-db.tar.gz
        mysql -h 0.0.0.0 -P 33306 -uroot -p${{ env.DB_PASSWORD }} < world-db/world.sql
        mysql -h 0.0.0.0 -P 33306 -uroot -p${{ env.DB_PASSWORD }} -e 'grant all on world.* to "ngx_php"@"%"; flush privileges;'
        ./.travis/compiler.sh
    - name: test
      run: ./.travis/test.sh
